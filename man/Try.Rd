% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProcessFunctions.R
\name{Try}
\alias{Try}
\title{Try}
\usage{
Try(expr, ignore = FALSE, info = NULL)
}
\arguments{
\item{expr}{R expression to be evaluated}

\item{ignore}{bool (FALSE) whether the script should continue after an error occured}

\item{info}{ProcessInfo object or NULL (NULL).
This is a list of relevant information about the process.
It can be created with \code{\link{RProcessInit}}.
If NULL the global environment is searched for an object of class ProcessInfo.}
}
\value{
NULL (if error occured) or result of evaluated expr
}
\description{
A convenience function for wrapping an expression in try and recovering from an error.
}
\details{
This is intended for use in an R batch script if it was started by a shiny session using the RProcess module.
If the batch script stops because of some error, the shiny session will never know about this.
By wrapping an error-prone expression in this function, a signal that the script failed is given to the shiny session (if ignore = FALSE).
If a log file exists, an entry is made.
This information is taken from the ProcessInfo object.

The communication happens via a *.status file.
Information provided by RProcess module is handed over to the R batch process via this file.
Conversely the R batch process writes on this file to hand over status updates to the shiny session.
By using the functions \code{\link{Init}}, \code{\link{Up}}, \code{\link{Log}}, \code{\link{Try}},
\code{\link{Fin}} it is ensured that the communication bewteen shiny session and R batch script work and
that no files are falsly overwritten.

If a session id exists, the log message is prefixed with it.
If a process id exists, before writing anything the loaded process id is compared with the current one -- read from the *.status file.
If they do not match, quit() is run.
This ensures that, in case a newer version of the same process is running, the current one will quit and not overwrite anything.
}
\examples{

}
\seealso{
Other RProcess module functions: \code{\link{Abort}},
  \code{\link{Fin}}, \code{\link{Init}}, \code{\link{Log}},
  \code{\link{RProcessFinishUI}},
  \code{\link{RProcessFinish}},
  \code{\link{RProcessStartUI}},
  \code{\link{RProcessStart}}, \code{\link{ReadInfo}},
  \code{\link{Start}}, \code{\link{Up}}
}

