% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RProcessFinish.R
\name{RProcessFinish}
\alias{RProcessFinish}
\title{RProcessFinish}
\usage{
RProcessFinish(input, output, session, pwd = getwd(), millis = 1000)
}
\arguments{
\item{input}{argument used by shiny session}

\item{output}{argument used by shiny session}

\item{session}{argument used by shiny session}

\item{pwd}{chr (getwd()) path of R batch process working directory.}

\item{millis}{\code{int} (1000) of the time interval in milli seconds in which to read the \code{*.status} file for possible changes}
}
\value{
\emph{list} with elements 4 elements
\itemize{
  \item \emph{finished} indicating the time at which the R script has finished (\code{NULL} if not finished yet)
  \item \emph{result} the actual output of the R script (\code{NULL} if not finished yet)
  \item \emph{error} if the R script finished with an error, a relevant message is given here as \code{chr} (\code{NULL} if no error occured)
  \item \emph{progress} \code{num} indicating progress of R script (1 if finished, [0,1[ if running, \code{NULL} otherwise)
}
}
\description{
This module observes a custom R script.
 Together with \code{\link{RProcessStart}} this module can start and observe a custom R script as background process.
 Both functions are combined in a convenience function \code{\link{RProcess}}.
}
\details{
If this function is used together with \code{\link{RProcessStart}}, they both need to be called with the same \code{id}
 and the same \code{pwd} (working directory).

The communication between the shiny session and the R script is done via a \code{*.status} file.
 Input and output are handed over via a \code{*.rds} file.
 The working directory of the process can be defined with \code{pwd}.
 This is where the files are read and written as well.

To ensure that the communication between the shiny session and the R script is working properly, use \code{\link{Rscript_Init}}
 to start the script and \code{\link{Rscript_Fin}} to finish it.
 These functions belong to the Rscript communication function which should be used in the R script for communication with the shiny session.
 For examples see the vignette on \emph{RProcess Module Functions} (\code{vignette("RProcess_functions", package = "shinyTools")}).
}
\seealso{
Seome examples on how to use RProcess module functions are given in the vignette \emph{RProcess Module Functions}
         (\code{vignette("RProcess_functions", package = "shinyTools")})

In the R script communications functions such as \code{\link{Rscript_Init}} and \code{\link{Rscript_Fin}} should be used
         to ensure correct communication between the R script and the shiny session.

Other RProcess module functions: \code{\link{RProcessFinishUI}},
  \code{\link{RProcessStartUI}},
  \code{\link{RProcessStart}}, \code{\link{RProcessUI}},
  \code{\link{RProcess}}
}

