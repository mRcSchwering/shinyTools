% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProcessFunctions.R
\name{Rscript_Init}
\alias{Rscript_Init}
\title{Rscript_Init}
\usage{
Rscript_Init(args = commandArgs(TRUE), log = paste("Starting at",
  Sys.time()))
}
\arguments{
\item{args}{chr of path to \code{*.status} file (\code{commandArgs(TRUE)}).
If the R script was started using RProcess module, this is the first trailing argument of Rscript (default).}

\item{log}{chr arr used as initial log entry for this process (\code{paste("Starting at", Sys.time())}). Each element is a line.}
}
\value{
input object as handed over from the RProcess module
        As a side effect an object \code{info} of class \emph{ProcessInfo} is written into the global environment.
        This is a list which contains information about the current process.
        It is used by all Rscript communication functions.
}
\description{
This function is used to read a \code{*.status} file and load the input for a R script which was started by a RProcess module
such as \code{\link{RProcess}}.
This should be the first command of the R script.
}
\details{
The function returns the object handed over by the RProcess module it was started with.
It also writes a list \code{info} of class \emph{ProcessInfo} into the global environment which is used by all other Rscript communication functions.
This list contains information needed to correctly communicate with the shiny session.

If a log file exists, it is appended by the lines defined with log. Each element of log is a line.
Information about path of the log file, the session id and the process id is taken from the \emph{ProcessInfo} object.
If a session id exists, every line is prefixed with it.
If a process id exists, before writing anything the loaded process id is compared with the current one -- read from the \code{*.status} file.
If they do not match the R session ends with a call to \code{quit}.
This ensures that, in case a newer version of the same process is running, the current one will quit and not overwrite anything.
}
\seealso{
These Rscript communication functions are used in R scripts started by a RProcess module such as \code{\link{RProcess}}.
         For some examples on how they work together see the vignette \emph{RProcess Module Functions}.

Other Rscript communication functions: \code{\link{ReadInfo}},
  \code{\link{Rscript_Abort}}, \code{\link{Rscript_Fin}},
  \code{\link{Rscript_Log}}, \code{\link{Rscript_Start}},
  \code{\link{Rscript_Try}}, \code{\link{Rscript_Up}}
}

